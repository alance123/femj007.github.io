<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[由busuanzi引起的博客访问变慢]]></title>
    <url>%2F2018-10-09%2Fbusuanzi%2F</url>
    <content type="text"><![CDATA[最近博客加载一直很慢，并且底部访问量统计加载不出来，是什么原因呢？记一个学习HTTP协议时偶然发现并解决的问题。 题外话：最近在模联开发团队做一个国内高校模联团队交流平台的网站，正好学习+实战web开发。 1. 学习HTTP调查blog问题原因使用Chrome浏览器，按F12打开开发者工具，选择Network选项（显示浏览器和服务器的通信），打开我的博客 http://blog.dongjinguo.com/ ，这时候发现主要界面加载出来后但整个网站仍然一直处于刷新状态，将Network中的记录按照时间从长到短排序，发现第一个状态是404，链接的地址是 https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js ，将其打开。 2. 发现busuanzi（不蒜子）打开后是如下页面： 把这个链接和hexo一起拖去Google一下，发现排第一的就是：“busuanzi统计挂了？” busuanzi正好是我的博客用来统计访客数量的工具。 在下面的搜索项中发现busuanzi官网，打开： 因七牛强制过期『dn-lbstatics.qbox.me』域名，与客服沟通无果，只能更换域名到『busuanzi.ibruce.info』！ 发现问题所在，无法解析到原来的域名导致我的博客访问过慢出错。 找到themes/next/layout/_partials目录下的footer.swig文件，将原来的域名改为新域名，成功解决问题。]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bug</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记录web开发中遇到的问题及解决（持续更新）]]></title>
    <url>%2F2018-09-30%2Ferrors%2F</url>
    <content type="text"><![CDATA[记录建站中踩过的一些坑。欢迎访问我的个人网站：dongjinguo.com 1. NginxNginx 502 Bad Gateway这个问题找了好久才解决，从中文到英文都查、试了个遍，发现我这边是php-fpm版本不一问题。首先检查/var/log/nginx中的错误日志，发现如下错误：unix:/run/php/php7.0-fpm.sock failed (13: Permission denied) while connecting to upstream检查发现服务器php版本是7.2，于是修改Nginx配置文件把7.0更改为7.2最终解决。 vim /etc/nginx/sites-available/default 中间确实饶了不少弯，其实配置时候即使根据教程也应该更仔细一点。 2. WordPressError establishing a database connection连接数据库出错，折腾了很久MySQL最后发现其实是wordpress配置文件问题： vi /root/wordpress/wp-config.php 经过对比发现是用户名多写了@localhost正确的配置图片如下： 图片剪裁问题问题：在WordPress中使用裁剪图片功能时，出现:“在裁剪您的图像时发生了错误。” 或者 ”There has been an error cropping your image.” 原因：缺少PHP GD库。 Ubuntu下运行： sudo apt-get install php5-gd Linux 下运行： yun install php-gd 然后重启nginx即可。 service nginx restart 原因分析： 没有GD库，会失去的功能；这些涉及图片处理的功能都需要GD库– 图片水印– 缩略图– 验证码 参考：https://blog.csdn.net/coderPark/article/details/50097025]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>WordPress</tag>
        <tag>Nginx</tag>
        <tag>bug</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[快速建站经历]]></title>
    <url>%2F2018-09-25%2FWebStation%2F</url>
    <content type="text"><![CDATA[记录一次简单建站经历，算是第一次正经地建站。适合新手尝试。2018.9.29更新 基于Nginx部署WordPress 1. 服务器首先是租用服务器，我用的一个是阿里云，另外一个是国外的vultr，各有各的优点，这里就不细说了。 阿里云服务器学生计划 如果想要租vultr服务器建议注册前先搜下他家的优惠活动。 2. 域名用自己名字注册了两个域名，国内注册的域名因为现在在国外不方便备案，所以现在使用的是在国外注册的域名。dongjinguo.com其实域名相当于网站的一个名字，可以方便访问，但如果只是自己实验玩玩也可以不用买域名。国内域名一定要备案，不然会被直接拦截。参考djinguo.com如果国外的域名商有提供收费的whois服务，不太建议在他家买……因为我注册第一天邮箱就源源不断的收到了很多web开发商的广告。部分信息不一定填写真实信息。 3. 搭建过程3.1 安装apache首先连接租用的服务器，工具可以使用Xshell或者PuTTY，连接成功后，依次输入下面的命令，注意不是一骨碌全输进去，而是一句一句输入，输完一句回车就行了，如果让你选择y/n那就选择y（yes） apt-get update apt-get install apache2 service apache2 restart2 3.2 安装phpapt-get install php 3.3 安装mysqlapt-get install mysql-server mysql-client 中途会让设置密码，然后就可以 service mysql start 最后，重启apache服务 service apache2 restart 到了这一步就可以在浏览器输入ip访问网站了。例如：http://127.0.0.1现在的访问页面是服务器的默认界面，然后怎么更改成想要的页面呢？ 4. 上传网站文件下载FileZilla Client或者WinSCP，连接之后进入/var/www/html目录，这个目录下有个index.html文件，替换成需要的index.html文件就行了，因为默认的接受index.html。我一开始是从网上找了一个模板打包上传修改（这里安利下Sublime Text的SFTP/FTP插件，与服务器同步很方便），现在在学习WordPress。 5. 参考资料本次建站参考了知乎·糯糕团子的回答，以下是答案链接：链接：https://www.zhihu.com/question/19774219/answer/160639566 2018.9.29更新 基于Nginx部署WordPress Nginx（发音同engine x）是一个异步框架的 Web服务器，也可以用作反向代理，负载平衡器 和 HTTP缓存。Nginx是一款面向性能设计的HTTP服务器，相较于Apache、lighttpd具有占有内存少，稳定性高等优势。与旧版本（&lt;=2.2）的Apache不同，Nginx不采用每客户机一线程的设计模型，而是充分使用异步逻辑从而削减了上下文调度开销，所以并发服务能力更强。整体采用模块化设计，有丰富的模块库和第三方模块库，配置灵活。 在Linux操作系统下，Nginx使用epoll事件模型，得益于此，Nginx在Linux操作系统下效率相当高。同时Nginx在OpenBSD或FreeBSD操作系统上采用类似于epoll的高效事件模型kqueue。（摘自维基百科） 在前文已有基础上搭建（包括PHP、MySql） Ubuntu安装Nginxapt-get update apt-get install nginx 配置Nginx使用PHP根据下图修改Nginx的server block configuration： vim /etc/nginx/sites-available/default 验证配置文件有没有错误： nginx -t 重启Nginx： /etc/init.d/nginx restart 下载WordPress通过wget命令官网下载最新的版本： wget http://wordpress.org/latest.tar.gz 解压： tar -xzvf latest.tar.gz 创建WordPress操作的数据库和用户登录MySQ： mysql -u root -p 创建数据库： CREATE DATABASE wordpress; 创建用户： CREATE USER wordpress@localhost; 设置密码： SET PASSWORD FOR wordpress@localhost=PASSWORD(&quot;your password&quot;); 配置权限： GRANT ALL PRIVILEGES ON wordpress.* TO wordpress@localhost IDENTIFIED BY &apos;your password&apos;; 刷新权限配置： FLUSH PRIVILEGES; 退出MySQL： QUIT; 配置WordPress重命名示例文件wp-config（此处的路径/root/wordpress对应自己的存放路径）： mv /root/wordpress/wp-config-sample.php /root/wordpress/wp-config.php 修改配置文件内容： vi /root/wordpress/wp-config.php 修改的内容包括DB_NAME，DB_USER，DB_PASSWORD以及下面的唯一key，其中前三个是在上一步中设置的内容，唯一key可以直接在提供的链接打开拷贝，修改后的文件如下所示： 配置Nginx拷贝WordPress： cp -r /root/wordpress/* /var/www/html 修改权限（Nginx默认是www-data用户来运行，所以没有权限写入root的文件）： chown -R www-data:www-data /var/www/html 重启Nginx： /etc/init.d/nginx restart 搞定之后访问域名或者IP地址就可以看到WordPress了~ 下面根据提示进行操作就可以了~]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>建站</tag>
        <tag>web</tag>
        <tag>WordPress</tag>
        <tag>Nginx</tag>
        <tag>Apache</tag>
        <tag>PHP</tag>
        <tag>MySql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[QQ机器人搭建教程]]></title>
    <url>%2F2018-09-23%2Fqqbot%2F</url>
    <content type="text"><![CDATA[其实很早就打算写这个简易教程了，一方面对这个项目做一个总结，另一方面虽然现在网上有很多的QQ机器人教程，但其实实现起来都有一点难度，尤其是对于一些缺乏编程基础的同学。希望这个教程可以实现小白也能搭建自己的QQbot，也算是给运营小雷锋、帮帮酱的联盟热心小伙伴们的一个答复。 2018.10.1 插件并入pandolia/qqbot，第一次成为contributer。 目录 qqbot项目总结回顾 qqbot搭建教程 2.1 安装python 2.2 安装qqbot 2.3 配置登录 2.4 搭建自动回复问题库 2.5 服务器上线 参考资料 反馈 项目展望 1. qqbot项目总结回顾这一段基本上回顾一下我做QQ机器人的过程经历，也算是一个我的QQ机器人的更新历史吧。 记得最早是大一暑假在知乎上看到QQ机器人这个项目的，然后自己也找了一些网上的教程（很遗憾刚刚又Google了一下没有找到当初借鉴最多的一篇教程），其实方法也挺多的，我使用的是GitHub上的开源项目qqbot，在写作本文时已有2957 star。 大一暑假使用QQ机器人进行电视台招新宣传，搭建在QQ号电视台小V上，实现好友300+，招新群新生人数200+。 当时经常水群的同学应该都对小V印象深刻，因为通过关键词检测，小V不仅可以自动回答新生们对电视台的相关问题，还会在很多时候自动向新生宣传电视台（比如其他社团发布广告时候），甚至因为机器人社联群几度踢出小V。 当时的QQ机器人功能已经比较丰富了，并且通过接入图灵机器人API接口可以与人进行聊天对话、天气预报、成语接龙等，以及通过运行在阿里云服务器上实现24h在线。不过因为通过代码中的关键词检测，实现的插件代码显得很臃肿（很多if-else语句）。于是产生使用文件操作通过读文件操作回答问题。 因为招新工作的结束以及参加一些比赛，QQ机器人搁置了很久。直到第二年夏天，在和瓜大小雷锋QQ运营小伙伴们开会时重启，希望通过QQ机器人解决人工小雷锋无法快速回复一些重复问题的问题。 于是，QQ机器人被搭载在了小雷锋QQ号上。这次我做的工作主要分为三个阶段： 将问题库存储在单独的文件中，此时只有同学们发出单独的关键词可能触发相关问题的自动回复； 基于jieba分词项目，自动提取语句中的关键词，针对询问句触发相关问题回答； 实现可以通过QQ消息添加问题库QA，并且有需要的同学可以停止小雷锋的自动回复。 小雷锋QQ号目前好友1800+，QQ机器人对快速解决同学们常见问题带来了很大帮助。目前在策划一场活动来鼓励学校同学们主动丰富小雷锋问题库，以实现无论什么问题，只要有同学遇到过，都可以通过小雷锋自动解决。 2. qqbot搭建教程 总的来说，可以概括为：安装python、安装qqbot、下载插件并运行。 2.1 安装python qqbot支持Python 2.7/3.4+ 下使用，因为我后面插件的代码使用的是python3，所以建议下载python3，具体的网上教程很多，主要是修改系统路径可能对小白有点困难，下面是随便找的一篇安装教程：python3安装教程 2.2 安装qqbot 最快捷的方法是使用pip安装： pip install qqbot 也可以下载源码解压后cd到该目录并运行：pip install 2.3 配置登录 理论上安装好之后就可以扫码登录QQ机器人了。 Win+R输入cmd打开命令行输入qqbot可以扫码登录 但是这时候还不能自动回复，需要通过插件进行自动回复。 leifeng插件下载（如果可以的话给我点颗star支持下新人谢谢~ 这个是最成熟的一版，集成了保存聊天记录、添加问题、停止自动回复、自动聊天等，但需要修改一下相关的路径，包括问题库列表、聊天记录保存路径等，代码上的是在我服务器上的路径。 如果仅仅想实现自动聊天功能也可以下载下面这个更简单的插件： smallV自动聊天插件下载 其中，有一个key值需要从图灵机器人网站注册创建机器人获得，并填入相关位置（插件第8行） 图灵机器人网站 注册创建就不说了，跟着步骤走，最后点击你创建好的机器人，找到API中的key： 最后，保存文件以后，只需要编译运行这个插件文件就可以扫码登录你的QQ机器人了~ 2.4 搭建自动回复问题库 其实在上面的leifeng.py中已经实现，问题列表格式可以参考下面的文件： qa.txt 这里使用的是很朴素的方法，就是通过python读写文件操作，因为一直没有很系统地学习过python，实现这个对我python文件操作学习提高很大。 2.5 服务器上线 通过前面的步骤你已经可以在自己的电脑上运行QQ机器人了，但是自己的电脑一般不会24h开机，所以就需要架设到服务器上。 一般来说我们买不起服务器，租用价格对于学生过高，这里推荐阿里云的学生计划比较便宜： 阿里云服务器学生计划 具体架设过程其实与在自己电脑上架设没有什么太大区别（windows主机），Linux服务器也可以正常搭建（区别可以参照qqbot的README文档），我现在使用的就是Linux服务器，对自己学习操作系统也有帮助。 3. 参考资料本项目参考了下列开源项目，感谢作者们的无私奉献！ pandolia/qqbot fxsjy/jieba 4. 反馈如果存在问题，请发邮件至：dong.jinguo@outlook.com 5. 项目展望其实QQ机器人目前还有许多不足的地方，首先是暂时无解的webQQ停止维护而导致的一些功能丧失，和需要定期扫码登录。 接着是小雷锋机器人实际应用中的一些问题，比如说语义分析，有可能遇到题库中的问题不能正确判断，或者是误触发。目前是使用的jieba分词中的算法加上一些自己的处理，这个问题打算在以后对语义分析进一步研究时进行解决。 还有使用python读写文件的操作进行题库读取整理效率不高（或者说感觉比较low），考虑可以通过建立数据库来优化。 在进一步的项目研究中，对于调用别人的API聊天对话也产生了一点兴趣，查到了一些机器自动应答的开源项目，后期可能会尝试这个领域。 作为我的第一篇博客，还想多说两句，当初知乎看到QQ机器人的时候并没想到这么多，可能想到招新，想到妹纸（很遗憾身边的女生对它兴趣不大），但没想到可以走这么多，提高了python水平，接触了服务器，入门了GitHub，甚至为了写教程开启了我的博客学会了markdown。 其实现在很感激父母，让我有机会通过2+2走出来，脱离原来的舒适圈，对如何更好地提高自己可以有更多思考与实践。 本文写于2018年9月23日，作为对2018年8月小项目的总结。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>qqbot</tag>
        <tag>Python</tag>
        <tag>语义分析</tag>
      </tags>
  </entry>
</search>
